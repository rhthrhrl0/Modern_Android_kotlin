plugins {
    id 'com.android.application'
    id 'kotlin-android'
    id 'kotlin-kapt'
}

android {
    compileSdk 31

    defaultConfig {
        applicationId "com.example.room_exam_kotlin"
        minSdk 21
        targetSdk 31
        versionCode 1
        versionName "1.0"

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    kotlinOptions {
        jvmTarget = '1.8'
    }

    buildFeatures {
        viewBinding = true
    }

}

dependencies {

    implementation 'androidx.core:core-ktx:1.8.0'
    implementation 'androidx.appcompat:appcompat:1.4.2'
    implementation 'com.google.android.material:material:1.6.1'
    implementation 'androidx.constraintlayout:constraintlayout:2.1.4'

    implementation 'androidx.room:room-ktx:2.3.0'
    testImplementation 'junit:junit:4.+'

    // 얘네가 있어야 다오객체의 추상클래스에 대해서도 컴파일이 잘 됨.
    implementation("androidx.room:room-runtime:2.3.0")
    // annotationProcessor는 코틀린에서는 kapt로 모두 바꿔줘라.
    // 이게 없으면 컴파일이 다오 추상클래스 객체에 대해 안된다.
    kapt("androidx.room:room-compiler:2.3.0")

    androidTestImplementation 'androidx.test.ext:junit:1.1.3'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.4.0'

    //코루틴 중에서도 lifecycleScope를 사용하기 위해
    implementation "androidx.lifecycle:lifecycle-runtime-ktx:2.4.0"

    // ViewModel 이거가 있어서 뷰모델에 대한 클래스가 중복이 되어서 에러가 났었음.
    //implementation("androidx.lifecycle:lifecycle-viewmodel:2.4.0")
    // LiveData
    implementation("androidx.lifecycle:lifecycle-livedata:2.4.0")

    // by viewModels() 를 사용하기 위해서.
    implementation 'androidx.activity:activity-ktx:1.1.0'
    implementation 'androidx.fragment:fragment-ktx:1.2.5'

}